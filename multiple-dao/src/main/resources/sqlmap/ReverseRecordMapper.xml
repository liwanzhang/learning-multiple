<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zwl.learning.multiple.dao.ReverseRecordDao">
    <resultMap id="BaseResultMap" type="zwl.learning.multiple.domain.entity.ReverseRecordEntity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="trade_no" property="tradeNo" jdbcType="VARCHAR"/>
        <result column="external_trade_no" property="externalTradeNo" jdbcType="VARCHAR"/>
        <result column="reverse_status" property="reverseStatus" jdbcType="TINYINT"/>
        <result column="note" property="note" jdbcType="VARCHAR"/>
        <result column="sys_version" property="sysVersion" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="times" property="times" jdbcType="INTEGER"/>
    </resultMap>
    
    <sql id="Base_Column_List">
    id, user_id, order_no, trade_no, external_trade_no, reverse_status, note, sys_version, 
    create_time, update_time, times
    </sql>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from reverse_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!--selectByMultiple-->
    <select id="selectByMultiple" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from reverse_record
        where 
        <foreach item="value" index="key" collection="userIds" separator="OR">
            <![CDATA[(id = #{key,jdbcType=INTEGER} AND user_id = #{value,jdbcType=INTEGER})]]>
        </foreach>
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reverse_record
    where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="zwl.learning.multiple.domain.entity.ReverseRecordEntity">
    insert into reverse_record (id, user_id, order_no, 
      trade_no, external_trade_no, reverse_status, 
      note, sys_version, create_time, 
      update_time, times)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, 
      #{tradeNo,jdbcType=VARCHAR}, #{externalTradeNo,jdbcType=VARCHAR}, #{reverseStatus,jdbcType=TINYINT}, 
      #{note,jdbcType=VARCHAR}, #{sysVersion,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{times,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="zwl.learning.multiple.domain.entity.ReverseRecordEntity">
        insert into reverse_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="tradeNo != null">
                trade_no,
            </if>
            <if test="externalTradeNo != null">
                external_trade_no,
            </if>
            <if test="reverseStatus != null">
                reverse_status,
            </if>
            <if test="note != null">
                note,
            </if>
            <if test="sysVersion != null">
                sys_version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="times != null">
                times,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeNo != null">
                #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="externalTradeNo != null">
                #{externalTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="reverseStatus != null">
                #{reverseStatus,jdbcType=TINYINT},
            </if>
            <if test="note != null">
                #{note,jdbcType=VARCHAR},
            </if>
            <if test="sysVersion != null">
                #{sysVersion,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="times != null">
                #{times,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="zwl.learning.multiple.domain.entity.ReverseRecordEntity">
        update reverse_record
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeNo != null">
                trade_no = #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="externalTradeNo != null">
                external_trade_no = #{externalTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="reverseStatus != null">
                reverse_status = #{reverseStatus,jdbcType=TINYINT},
            </if>
            <if test="note != null">
                note = #{note,jdbcType=VARCHAR},
            </if>
            <if test="sysVersion != null">
                sys_version = #{sysVersion,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="times != null">
                times = #{times,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="zwl.learning.multiple.domain.entity.ReverseRecordEntity">
    update reverse_record
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      external_trade_no = #{externalTradeNo,jdbcType=VARCHAR},
      reverse_status = #{reverseStatus,jdbcType=TINYINT},
      note = #{note,jdbcType=VARCHAR},
      sys_version = #{sysVersion,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      times = #{times,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>